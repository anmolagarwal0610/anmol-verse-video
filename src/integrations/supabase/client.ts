
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nlrxzpszbkifkkuyfinx.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5scnh6cHN6YmtpZmtrdXlmaW54Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDI4Mjk1NzQsImV4cCI6MjA1ODQwNTU3NH0.AfhZH-Pwc-fxIScQHCNe_GFAIKF55nHIa8Dnuz8lqs4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storageKey: 'anmol-verse-auth-token',
    storage: localStorage,
    flowType: 'pkce', // Explicitly use PKCE flow for better security
    detectSessionInUrl: true, // Ensure session hash is properly detected
    debug: true, // Enable debug mode for auth operations
  }
});

// Add some debugging for session detection
if (typeof window !== 'undefined') {
  console.log('[Supabase Client] Initializing with persistSession=true and autoRefreshToken=true');
  console.log('[Supabase Client] Current origin:', window.location.origin);
  console.log('[Supabase Client] Current URL:', window.location.href);
  
  // Check if we have a session in localStorage
  const session = localStorage.getItem('anmol-verse-auth-token');
  console.log('[Supabase Client] Session in localStorage:', session ? 'exists' : 'not found');

  // Listen for auth state changes
  supabase.auth.onAuthStateChange((event, session) => {
    console.log('[Supabase Client] Auth state changed:', event, 'Session:', session ? 'exists' : 'null');
  });
}
